소프트웨어 아키텍처 ? 골격, 구조
ㄴ 품질이 좋다? 요구사항 충족 완료

아키텍처 설계 원리
- 모듈화 (추상화(게과자), 구체화)
- 단계적 분해 (하향식 구체화)
- 정보 은닉

아키텍처 패턴 ? 문제해결의 원칙, 표준
-> 시간 단축, 품질 향상, 검증, 예측 가능

- 레이어 : 각각 상위 하위 레이어끼리 작용
- 클라이언트-서버 ? 1서버 N클라
- 파이프 필터 ? 스트림의 각 단계를 파이프와 필터로 연결
- MVC 
- 마스터 슬레이브 마스터 컴포넌트가 지시한 일을 병렬처리함
- 브로커 
- 피어투피어 ? 2가지 일을 병렬로 수행하는 멀티 스레딩
- 이벤트 버스

객체 지향
- 데이터 : 상수 변수 배열 구조체
- 기능 : 실행문 함수 반복문 등

클래스 ? 데이터와 관련된 기능을 묶은것 (=캡슐화(정보은닉))
ㄴ 인스턴스화 : 클래스 복ㅈ[, 같은 클래스의 구조를 가지지만 다른내용
ㄴ 상속 : 하위클래스는 상위클의 모든 요소부터 전부 사용 가능함
ㄴ 다형성 : 통합객체로 여러가지 일을 수행시킴

모듈
결합도 : 상호의존의 정도 / 약해야 품질이 좋아짐
 => 자료 → 스탬프 → 제어 → 외부 → 공유 → 내용 (약한순 ~ 강한순)
응집도 : 강할수록 품질이 좋아짐
 => 기능 → 순차 → 통신 → 절차 → 시간 → 논리 → 우연 (강한순 ~ 약한순)

- 독립성
- 팬인/팬아웃
- 공통모둘


코드 / 디자인 패턴 
-순차 : 일련번호/ 차례대로, 다른 개념들에 더해서 사용됨
-블록 : 구역을 구분한 뒤에 순차코드
-10진 : 항목을 10개로 나누고, 필요할 때까지 반복해서 코드를 부여, 한자리씩
-그룹분류 : 하이픈으로 구분, 항목별로 일련번호 부여, 10진이랑 유사, 2자리 이상 가능
-연상 : 코드만 봐도 연상할 수 있게, 브랜드-상품코드 등
-표의 숫자 : 해당 제품의 수치 등을 코드에 사용한건데 유효 숫자 코드라고 함
